{"version":3,"sources":["ResultRow.js","App.js","index.js"],"names":["ResultRow","props","Row","Col","xs","Container","className","data","title","subTitle","price","App","useState","billValidateLabel","setBillValidateLabel","peopleValidateLabel","setPeopleValidateLabel","bill","people","tipPercent","tipAmount","Total","setData","useEffect","Bill","parseFloat","tipAmountPerPerson","TotalMoneyPerPerson","parseInt","calculateAndDivide","Fragment","md","Form","FormGroup","Label","id","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","step","min","onChange","e","target","value","type","name","style","padding","map","tip","i","onClick","preventDefault","tipButton","toFixed","alignSelf","document","getElementById","disabled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f8edcced.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container,Row,Col } from 'reactstrap';\nexport default function ResultRow(props) {\n  return (\n    <Row>\n      <Col xs={12}>\n        <Container>\n          <Row>\n            <Col >\n              <Container>\n                <Row>\n                  <Col className=\"ResultsHeader\">{props.data.title}</Col>\n                </Row>\n                <Row>\n                  <Col className=\"ResultsSubTitle\">{props.data.subTitle}</Col>\n                </Row>\n              </Container>\n            </Col>\n            <Col >\n            <Container>\n                <Row>\n                <Col className=\"ResultsPrice\">{props.data.price}</Col>\n                </Row>\n            </Container>\n            </Col>\n          </Row>\n        </Container>\n      </Col>\n    </Row>\n  );\n}\n","import {\n  Container,\n  Row,\n  Col,\n  Form,\n  Label,\n  InputGroupAddon,\n  Input,\n  FormGroup,\n  InputGroupText,\n  InputGroup,\n} from \"reactstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport ResultRow from \"./ResultRow\";\nimport { FaUserAlt, FaDollarSign } from 'react-icons/fa'\nimport './assets/styles.css'\nexport default function App() {\n  const tips = [5, 10, 15, 25, 50];\n  const [billValidateLabel, setBillValidateLabel] = useState('');\n  const [peopleValidateLabel, setPeopleValidateLabel] = useState('')\n\n  const [data, setData] = useState({\n    bill: 0,\n    people: 0,\n    tipPercent: 0.00,\n    tipAmount: 0.00,\n    Total: 0,\n  })\n  \n  const calculateAndDivide = ()=> {\n    let Bill = parseFloat(data.bill);\n    let tipAmountPerPerson = (Bill * (data.tipPercent / 100) / data.people);\n    let TotalMoneyPerPerson = ((Bill / parseInt(data.people)) + tipAmountPerPerson);\n    setData({\n      ...data,\n      tipAmount: tipAmountPerPerson,\n      Total: TotalMoneyPerPerson,\n    })\n  }\n  const cleanResults = ()=> {\n    setData({\n      ...data,\n      tipAmount: 0,\n      Total: 0,\n    })\n  }\n  useEffect(() => {\n    if (data.bill > 0 && data.people > 0) {\n      calculateAndDivide();\n    } else {\n      cleanResults();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data.bill, data.people, data.tipPercent])\n  function tipButton(e, tip) {\n    e.preventDefault();\n    setData({ ...data, tipPercent: tip });\n  }\n \n  function handleBillInput(e) {\n    if (e.target.value < 0) {\n      setBillValidateLabel(\"Bill Can't be less than 0\")\n      setData({ ...data, bill: 0 })\n    } else {\n      setBillValidateLabel(\"\")\n      setData({ ...data, bill: e.target.value })\n    }\n  }\n  function handlePeopleInput(e) {\n    if (e.target.value <= 0) {\n      setPeopleValidateLabel(\"People Can't be less than 1\");\n      setData({ ...data, people: 0 });\n    } else {\n      setPeopleValidateLabel(\"\");\n      setData({ ...data, people: e.target.value });\n    }\n  }\n  function clean(){\n    document.getElementById('Bill').value='';\n    document.getElementById('CustomTip').value='';\n    document.getElementById('NumberOfPeople').value='';\n    setData({\n      bill: 0,\n      people: 0,\n      tipPercent: 0.00,\n      tipAmount: 0.00,\n      Total: 0,\n    })\n  }\n  return (\n    <React.Fragment>\n      <Container className=\"Container App\">\n        <Row className=\"RowPrimary\">\n          <Col md={6} xs={12}>\n            <Form className=\"FormLayout\">\n              <FormGroup>\n                <Label className=\"inputLabel\">Bill</Label>\n                <Label className=\"inputLabel Validate\" id=\"BillValidate\">{billValidateLabel}</Label>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText className=\"addOnInputSympol\"><FaDollarSign className=\"addOnInputIcon\" /></InputGroupText>\n                  </InputGroupAddon>{\" \"}\n                  <Input placeholder=\"0\"  step=\"0.01\" min=\"0\" onChange={handleBillInput} className={`FormInput ${billValidateLabel===''?billValidateLabel:\"Invalid\"}`} type=\"number\" id=\"Bill\" name=\"Bill\" ></Input>\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"inputLabel\">Select Tip %</Label>\n                <InputGroup>\n                  <Container style={{ padding: \"0\" }}>\n                    <Row>\n                      {\n                        tips.map((tip, i) => {\n                          return <Col key={i} xs={6} md={4}>\n                            <button key={i}\n                              className={`${data.tipPercent === tip ? \"Button Group Inverted\" : \"Button Group\"}`}\n                              onClick={(e) => tipButton(e, tip)}\n                            >\n                              {tip}%\n                            </button>\n                          </Col>\n                        })\n                      }\n                      <Col xs={6} md={4}>\n                        <Input\n                        className=\"FormInput\"\n                        type=\"number\"\n                        placeholder=\"CUSTOM\" min=\"0\"\n                        id=\"CustomTip\"\n                        onChange={(e) =>  setData({ ...data, tipPercent: e.target.value })}\n                      >\n                        Custom\n                      </Input>\n                      </Col>\n                    </Row>\n                  </Container>\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"inputLabel\">Number of People</Label>\n                <Label className=\"inputLabel Validate\" id=\"PeopleValidate\">{peopleValidateLabel}</Label>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText className=\"addOnInputSympol\"><FaUserAlt className=\"addOnInputIcon\" /></InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"number\"\n                    id=\"NumberOfPeople\"\n                    name=\"NumberOfPeople\"\n                    className={`FormInput ${peopleValidateLabel===''?peopleValidateLabel:\"Invalid\"}`}\n                    placeholder=\"0\"\n                    min=\"1\"\n                    onChange={handlePeopleInput}\n                  ></Input>\n                </InputGroup>\n              </FormGroup>\n            </Form>\n          </Col>\n          <Col md={6} xs={12}>\n            <Container className=\"Container Result\">\n              <ResultRow\n                data={{\n                  title: \"Tip Amount\",\n                  subTitle: \"/  person\",\n                  price: `$${data.tipAmount.toFixed(2)}`,\n                }}\n              />\n              <ResultRow\n                data={{\n                  title: \"Total\",\n                  subTitle: \"/  person\",\n                  price: `$${data.Total.toFixed(2)}`,\n                }}\n              />\n              <Row style={{ alignSelf: \"end\" }}>\n                <Col xs={12}>\n                  <button className=\"Button Reset\" \n                  onClick={clean}\n                  disabled={\n                    parseFloat(data.bill) !== 0 || parseInt(data.people) !== 0 || data.tipPercent !== 0 ? \n                    false:true\n                    }>RESET</button>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Container,\n  Row,\n  Col\n}from \"reactstrap\";\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <Row>\n        <Col className=\"logoCol\">\n        <p className=\"logo\">S P L I</p>\n        <p className=\"logo\">T T E R</p>\n        </Col>\n      </Row>\n      <Row>\n      <App />\n      </Row>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}